@@ -8,15 +8,15 @@ import 'openzeppelin-eth/contracts/ownership/Ownable.sol';
  * @title Mixin allowing the Lock owner to disable a Lock (preventing new purchases)
  * and then destroy it.
  * @author HardlyDifficult
- * @dev `Mixins` are a design pattern seen in the 0x contracts.  It simply 
- * separates logically groupings of code to ease readability. 
+ * @dev `Mixins` are a design pattern seen in the 0x contracts.  It simply
+ * separates logically groupings of code to ease readability.
  */
 contract MixinDisableAndDestroy is
   IERC721,
   Ownable
 {
   // Used to disable payable functions when deprecating an old lock
-  bool public isAlive; 
+  bool public isAlive;
 
   event Destroy(
     uint balance,
@@ -58,7 +58,7 @@ contract MixinDisableAndDestroy is
     onlyOwner
   {
     require(isAlive == false, 'DISABLE_FIRST');
-    emit Destroy(this.balance, msg.sender);
+    emit Destroy(address(this).balance, msg.sender);
     selfdestruct(msg.sender);
     // Note we don't clean up the `locks` data in Unlock.sol as it should not be necessary
     // and leaves some data behind ('Unlock.LockBalances') which may be helpful.