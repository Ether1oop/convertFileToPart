@@ -182,19 +182,19 @@ contract DappManager is BaseModule, RelayerModule, LimitManager {
         BaseWallet _wallet, 
         address _dapp,
         address _contract,
-        bytes4[] _signatures
+        bytes4[] calldata _signatures
     ) 
         external 
         onlyWhenUnlocked(_wallet)
     {
         bytes32 id = keccak256(abi.encodePacked(address(_wallet), _dapp, _contract, _signatures, true));
-        DappManagerConfig storage config = configs[_wallet];
+        DappManagerConfig storage config = configs[address(_wallet)];
         require(config.pending[id] > 0, "DM: No pending authorisation for the target dapp");
         require(config.pending[id] < now, "DM: Too early to confirm pending authorisation");
         require(now < config.pending[id] + securityWindow, "GM: Too late to confirm pending authorisation");
         dappStorage.setMethodAuthorization(_wallet, _dapp, _contract, _signatures, true);
         delete config.pending[id];
-        emit ContractCallAuthorized(_wallet, _dapp, _contract, _signatures);
+        emit ContractCallAuthorized(address(_wallet), _dapp, _contract, _signatures);
     }