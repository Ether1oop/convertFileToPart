@@ -1,10 +1,11 @@
-pragma solidity ^0.6.0;
+// SPDX-License-Identifier: MIT
+pragma solidity >=0.7.0 <0.8.0;
 
-import '@openzeppelin/contracts/token/ERC20/IERC20.sol';
-import '@openzeppelin/contracts/token/ERC20/SafeERC20.sol';
+import {IERC20} from '@openzeppelin/contracts/token/ERC20/IERC20.sol';
+import {SafeERC20} from '@openzeppelin/contracts/token/ERC20/SafeERC20.sol';
 
-import './owner/Operator.sol';
-import './interfaces/ISimpleERCFund.sol';
+import {Operator} from '../access/Operator.sol';
+import {ISimpleERCFund} from './ISimpleERCFund.sol';
 
 contract SimpleERCFund is ISimpleERCFund, Operator {
     using SafeERC20 for IERC20;
@@ -14,8 +15,8 @@ contract SimpleERCFund is ISimpleERCFund, Operator {
         uint256 amount,
         string memory reason
     ) public override {
-        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);
-        emit Deposit(msg.sender, now, reason);
+        IERC20(token).safeTransferFrom(_msgSender(), address(this), amount);
+        emit Deposit(_msgSender(), block.timestamp, reason);
     }
 
     function withdraw(
@@ -25,7 +26,7 @@ contract SimpleERCFund is ISimpleERCFund, Operator {
         string memory reason
     ) public override onlyOperator {
         IERC20(token).safeTransfer(to, amount);
-        emit Withdrawal(msg.sender, to, now, reason);
+        emit Withdrawal(_msgSender(), to, block.timestamp, reason);
     }
 
     event Deposit(address indexed from, uint256 indexed at, string reason);