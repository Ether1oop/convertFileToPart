@@ -38,6 +37,11 @@ contract GebUniswapv3LiquidtyManagerTest is DSTest {
         testWeth = new TestWETH("WETH");
         (token0, token1) = address(testRai) < address(testWeth) ? (address(testRai), address(testWeth)) : (address(testWeth), address(testRai));
 
+        emit log_named_address("testRai", address(testRai));
+        emit log_named_address("testWeth", address(testWeth));
+        emit log_named_address("token0", address(token0));
+        emit log_named_address("token1", address(token1));
+
         // Deploy Pool
         pool = UniswapV3Pool(helper_deployV3Pool(token0, token1, 500));
 
@@ -176,17 +180,17 @@ contract GebUniswapv3LiquidtyManagerTest is DSTest {
 
         //withdraw half of liquidity
         (uint256 bal0, uint256 bal1) = u1.doWithdraw(uint128(liq / 2));
-        emit log_named_uint("bal0", bal0);
-        emit log_named_uint("bal1", bal1);
-        assertTrue(manager.balanceOf(address(u1)) == liq / 2);
+        emit log_named_uint("bal0", liq / 2);
+        emit log_named_uint("bal1", manager.balanceOf(address(u1)));
+        assertTrue(manager.balanceOf(address(u1)) - 1 == liq / 2);
 
         (uint128 _li2, , , , ) = pool.positions(inti_id);
         emit log_named_uint("_li2", _li2);
         emit log_named_uint("_li / 2", _li / 2);
-        assertTrue(_li2 == _li / 2);
+        assertTrue(_li2 - 1 == _li / 2);
 
         (bytes32 end_id, , , uint128 end_uniLiquidity) = manager.position();
-        assertTrue(end_uniLiquidity == inti_uniLiquidity / 2);
+        assertTrue(end_uniLiquidity - 1 == inti_uniLiquidity / 2);
     }
 
     function test_multiple_users_adding_liquidity() public {

