@@ -325,10 +425,14 @@ contract Controller is IController, Orchestrated(), Delegable(), DecimalMath {
         debtYDai[collateral][maturity][user] = debtYDai[collateral][maturity][user].sub(yDaiAmount);
         totalDebtYDai[collateral][maturity] = totalDebtYDai[collateral][maturity].sub(yDaiAmount);
 
-        emit Borrowed(collateral, maturity, user, -int256(yDaiAmount)); // TODO: Watch for overflow
+        emit Borrowed(collateral, maturity, user, -toInt256(yDaiAmount));
     }
 
     /// @dev Removes all collateral and debt for an user, for a given collateral type.
+    /// This function can only be called by other Yield contracts, not users directly.
+    /// @param collateral Valid collateral type.
+    /// @param user Address of the user vault
+    /// @return The amounts of collateral and debt removed from Controller.
     function erase(bytes32 collateral, address user)