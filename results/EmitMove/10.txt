@@ -38,13 +38,15 @@ contract StakingTest is BaseFixture {
         uint256 userCitadelAfter = citadel.balanceOf(user);
         uint256 xCitadelBalanceAfter = citadel.balanceOf(address(xCitadel));
         uint256 userXCitadelAfter = xCitadel.balanceOf(user);
+
+        emit log_named_uint("xCitadel received",userXCitadelAfter-userXCitadelBefore );
+
         // check if user has successfully deposited
         assertEq(userCitadelBefore - userCitadelAfter, 10e18);
         assertEq(xCitadelBalanceAfter - xCitadelBalanceBefore, 10e18);
 
         uint256 vestingCitadelBefore = citadel.balanceOf(address(xCitadelVester));
-        emit log_named_uint("xCitadel received",userXCitadelAfter-userXCitadelBefore );
-        // uint xCitadelReceived = 
+
         // user withdraws all amount
         xCitadel.withdrawAll();
 
@@ -53,7 +55,31 @@ contract StakingTest is BaseFixture {
 
         emit log_named_uint("Vesting Citadel received",vestingCitadelAfter-vestingCitadelBefore );
 
-        // assertEq()
+        // should have sent full amount to vesting
+        assertEq(vestingCitadelAfter-vestingCitadelBefore  , 10e18);
+
+        // moving half duration 
+        vm.warp(block.timestamp + xCitadelVester.INITIAL_VESTING_DURATION()/2 );
+
+        uint256 claimableAmount = xCitadelVester.claimableBalance(user);
+
+        // at half duration. user should be able claim half amount
+        assertEq(claimableAmount , 10e18/2);
+
+        // move forward so that the vesting period ends
+        vm.warp(block.timestamp + xCitadelVester.INITIAL_VESTING_DURATION() );
+
+        claimableAmount = xCitadelVester.claimableBalance(user);
+
+        // as the vesting period is ended. user should be able claim full amount
+        assertEq(claimableAmount , 10e18);
+
+        userCitadelBefore = citadel.balanceOf(user);
+        xCitadelVester.claim(user , 10e18);
+        userCitadelAfter = citadel.balanceOf(user);
+
+        // user should have got full amount back
+        assertEq(userCitadelAfter- userCitadelBefore, 10e18);
         vm.stopPrank();
     }
 }
\ No newline at end of file