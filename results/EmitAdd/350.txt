@@ -167,23 +203,12 @@ contract Rebalancer {
         uint256 _ratioB = _looseB.div(_pooledB);
         uint256 _ratio = Math.min(_ratioA, _ratioB);
         uint256 _bptOut = bpt.totalSupply().mul(_ratio);
-        emit Debug("_looseA", _looseA);
-        emit Debug("_looseB", _looseB);
-        emit Debug("_pooledA", _pooledA);
-        emit Debug("_pooledB", _pooledB);
-        emit Debug("_ratioA", _ratioA);
-        emit Debug("_ratioB", _ratioB);
-        emit Debug("_bptOut", _bptOut);
 
         uint256[] memory _maxAmountIn = new uint256[](2);
         _maxAmountIn[0] = _looseA;
         _maxAmountIn[1] = _looseB;
         _bptOut = _bptOut.mul(98).div(100);
         bpt.joinPool(_bptOut, _maxAmountIn);
-        emit Debug("_looseA", looseBalanceA());
-        emit Debug("_looseB", looseBalanceB());
-        emit Debug("_pooledA", pooledBalanceA());
-        emit Debug("_pooledB", pooledBalanceB());
 