@@ -133,14 +137,59 @@ abstract contract OverlayV1PricePoint {
         PricePoint memory _pricePoint
     ) internal {
 
-        emit NewPricePoint(
-            _pricePoint.bid, 
-            _pricePoint.ask, 
-            _pricePoint.depth
-        );
+        // emit NewPricePoint(
+        //     _pricePoint.bid, 
+        //     _pricePoint.ask, 
+        //     _pricePoint.depth
+        // );
 
         _pricePoints.push(_pricePoint);
 
     }
 
+    function readPricePoint (
+        uint _pricePoint
+    ) public view returns (
+        uint256 bid_,
+        uint256 ask_,
+        uint256 depth_
+    ) {
+
+        return readPricePoint(_pricePoints[_pricePoint]);
+
+    }
+
+    function readPricePoint(
+        PricePoint memory _pricePoint
+    ) public view returns (
+        uint256 bid_,
+        uint256 ask_,
+        uint256 depth_
+    ) {
+
+        uint _microPrice = _tickToPrice(_pricePoint.microTick);
+
+        uint _macroPrice = _tickToPrice(_pricePoint.macroTick);
+
+        uint _spread = pbnj;
+
+        ask_ = Math.max(_macroPrice, _microPrice).mulUp(E.powUp(_spread));
+
+        bid_ = Math.min(_macroPrice, _microPrice).mulDown(INVERSE_E.powUp(_spread));
+
+        depth_ = _pricePoint.depth;
+
+
+    }
+
+    function _tickToPrice (
+        int56 _tick
+    ) public pure returns (
+        uint price_
+    ) {
+
+
+    }
+
+
 }
