@@ -565,8 +566,7 @@ contract RToken is
         uint256 sInternalCreated = sOriginalTosInternal(sOriginalCreated);
         distributeLoans(msg.sender, mintAmount, sInternalCreated);
 
-        emit Mint(msg.sender, mintAmount);
-        emit Transfer(address(this), msg.sender, mintAmount);
+        emit Transfer(address(0), msg.sender, mintAmount);
     }
 
     /**
@@ -605,8 +605,7 @@ contract RToken is
         // transfer the token back
         require(token.transfer(redeemTo, redeemAmount), "token transfer failed");
 
-        emit Transfer(msg.sender, address(this), redeemAmount);
-        emit Redeem(msg.sender, redeemTo, redeemAmount);
+        emit Transfer(msg.sender, address(0), redeemAmount);
     }
 
     /**
@@ -663,15 +662,13 @@ contract RToken is
         uint256 oldHatID = account.hatID;
         HatStatsStored storage oldHatStats = hatStats[oldHatID];
         HatStatsStored storage newHatStats = hatStats[hatID];
+        account.hatID = hatID;
         if (account.rAmount > 0) {
             uint256 sInternalAmountCollected = estimateAndRecollectLoans(
                 owner,
                 account.rAmount
             );
-            account.hatID = hatID;
             distributeLoans(owner, account.rAmount, sInternalAmountCollected);
-        } else {
-            account.hatID = hatID;
         }
         oldHatStats.useCount -= 1;
         newHatStats.useCount += 1;
@@ -896,7 +893,7 @@ contract RToken is
             account.rAmount = account.rAmount.add(interestAmount);
             totalSupply = totalSupply.add(interestAmount);
             emit InterestPaid(owner, interestAmount);
-            emit Transfer(address(this), owner, interestAmount);
+            emit Transfer(address(0), owner, interestAmount);
         }
     }
 

