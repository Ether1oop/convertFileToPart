@@ -18,17 +18,44 @@ import "../wallet/BaseWallet.sol";
 
 /**
  * @title FakeWallet
- * @dev A fake wallet with an invoke() method that does nothing but emitting an event.
+ * @dev A fake wallet with an invoke() method that acts maliciously.
  * @author Olivier VDB - <olivier@argent.xyz>
  */
 contract FakeWallet is BaseWallet {
+    bool targetIsModule;
+    address target;
+    uint value;
+    bytes data;
+    constructor(bool _targetIsModule, address _target, uint _value, bytes memory _data) public {
+        targetIsModule = _targetIsModule;
+        target = _target;
+        value = _value;
+        data = _data;
+    }
+
     /**
-     * @dev Does nothing but emitting an event.
+     * @dev Does nothing unless (storage) target is set, in which case, call target.
      * @param _target The address for the transaction.
      * @param _value The value of the transaction.
      * @param _data The data of the transaction.
      */
     function invoke(address _target, uint _value, bytes calldata _data) external moduleOnly returns (bytes memory _result) {
-        emit Invoked(msg.sender, _target, _value, _data);
+        if (target != address(0)) {
+            address prevOwner = owner;
+            if (targetIsModule) {
+                // change the owner to itself to enable reentrancy in a module
+                owner = address(this);
+            }
+            // solium-disable-next-line security/no-call-value
+            (bool success,) = target.call.value(value)(data);
+            owner = prevOwner;
+            if (!success) {
+                // solium-disable-next-line security/no-inline-assembly
+                assembly {
+                    returndatacopy(0, 0, returndatasize)
+                    revert(0, returndatasize)
+                }
+            }
+        }
     }
 }
\ No newline at end of file